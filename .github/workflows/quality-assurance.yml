name: Coding Standards & Static Analysis
on: [push, pull_request]
jobs:
  qa:
    name: Quality Assurance
    runs-on: ubuntu-latest
    env:
      php-version: '8.3'
      php-extensions: yaml
      PHP_CS_FIXER_IGNORE_ENV: 1 # PHP8.3 remove when PHP-CS-Fixer fully supports PHP 8.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          ini-values: zend.assertions=1
          coverage: none # Xdebug is installed by default, so we remove it manually

      - name: Creating var directory
        run: mkdir -p var/cache

      - name: Cache QA results
        uses: actions/cache@v4
        with:
          path: var/cache
          key: qa-${{ hashFiles('composer.lock') }}-${{ hashFiles('.github/workflows/quality-assurance.yml') }}
          restore-keys: qa-${{ hashFiles('composer.lock') }}-${{ hashFiles('.github/workflows/quality-assurance.yml') }}

      - name: Checking Composer
        run: composer validate --strict

      - uses: "ramsey/composer-install@v2"

      - name: Checking for forgotten TODO
        run: composer check-todo

      - name: Running PHPStan (global)
        run: php vendor/bin/phpstan

      - name: Cache PHPStan result cache for re-use while mutation testing
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: phpstan-result-cache
          path: var/cache/phpstan/phpstan-resultCache.php

      - name: Running PHP Coding Standards Fixer
        run: php vendor/bin/php-cs-fixer fix --dry-run

      - name: Running Rector
        run: php vendor/bin/rector --dry-run

  mutation:
    name: Mutation tests
    runs-on: ubuntu-latest
    needs: qa
    env:
      php-version: '8.2'
      php-extensions: ds,yaml
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for the `git diff` used below for Infection

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          ini-values: zend.assertions=1
          coverage: pcov

      - uses: "ramsey/composer-install@v2"

      - name: Creating var directory
        run: mkdir -p var/cache

      - name: Cache Mutation results
        uses: actions/cache@v4
        with:
          path: var/cache
          key: mutation-${{ hashFiles('composer.lock') }}-${{ hashFiles('.github/workflows/mutation.yml') }}
          restore-keys: mutation-${{ hashFiles('composer.lock') }}-${{ hashFiles('.github/workflows/mutation.yml') }}

      - name: Restore PHPStan result cache to speedup Infection PHPStan killer
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: phpstan-result-cache
          path: var/cache/phpstan/

      - name: Running mutation tests
        if: github.ref == 'refs/heads/master'
        run: php vendor/bin/infection --threads=$(nproc) --with-uncovered
        env:
          INFECTION_BADGE_API_KEY: ${{ secrets.INFECTION_BADGE_API_KEY }}

      - name: Running mutation tests
        if: github.event_name == 'pull_request'
        run: |
          git fetch --depth=1 origin $GITHUB_BASE_REF
          php vendor/bin/infection --threads=$(nproc) --git-diff-lines --git-diff-base=origin/$GITHUB_BASE_REF --logger-github --ignore-msi-with-no-mutations --with-uncovered --min-msi=100 --show-mutations --verbose
